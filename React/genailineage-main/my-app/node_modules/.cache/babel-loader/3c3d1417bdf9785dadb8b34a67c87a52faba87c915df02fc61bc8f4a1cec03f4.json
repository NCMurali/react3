{"ast":null,"code":"var _jsxFileName = \"/workspace/react3/React/genailineage-main/my-app/src/AlertsPage.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\n\nconst ApplicationsPage = () => {\n  const applications = [\n    { id: 1, name: 'Application 1' },\n    { id: 2, name: 'Application 2' },\n    { id: 3, name: 'Application 3' },\n    { id: 4, name: 'Application 4' },\n    { id: 5, name: 'Application 5' },\n  ];\n\n  return (\n    <div >\n      <h2  class=\"text-center\">Data Alerts</h2>\n      \n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {applications.map(application => (\n            <tr key={application.id}>\n              <td>{application.id}</td>\n              <td>{application.name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ApplicationsPage;*/\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationsPage = () => {\n  _s();\n  const applications = [{\n    id: 1,\n    name: 'Application 1',\n    notifications: []\n  }, {\n    id: 2,\n    name: 'Application 2',\n    notifications: []\n  }, {\n    id: 3,\n    name: 'Application 3',\n    notifications: []\n  }, {\n    id: 4,\n    name: 'Application 4',\n    notifications: []\n  }, {\n    id: 5,\n    name: 'Application 5',\n    notifications: []\n  }];\n  const [selectedApplicationId, setSelectedApplicationId] = useState(null);\n  const handleApplicationClick = applicationId => {\n    setSelectedApplicationId(applicationId);\n  };\n  const handleNotificationClick = notificationId => {\n    // Logic for handling notification click\n    console.log(`Notification clicked: ${notificationId}`);\n  };\n  const getApplicationNotifications = () => {\n    const selectedApplication = applications.find(app => app.id === selectedApplicationId);\n    return selectedApplication ? selectedApplication.notifications : [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Data Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: applications.map(application => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleApplicationClick(application.id),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: application.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: application.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, application.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), selectedApplicationId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Notifications for \", applications.find(app => app.id === selectedApplicationId).name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: getApplicationNotifications().map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleNotificationClick(notification.id),\n          children: notification.content\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationsPage, \"DKeuqsaqGoVhvvTN3iB2q8GN1z0=\");\n_c = ApplicationsPage;\nexport default ApplicationsPage;\nvar _c;\n$RefreshReg$(_c, \"ApplicationsPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ApplicationsPage","_s","applications","id","name","notifications","selectedApplicationId","setSelectedApplicationId","handleApplicationClick","applicationId","handleNotificationClick","notificationId","console","log","getApplicationNotifications","selectedApplication","find","app","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","application","onClick","notification","content","_c","$RefreshReg$"],"sources":["/workspace/react3/React/genailineage-main/my-app/src/AlertsPage.js"],"sourcesContent":["/*import React from 'react';\n\nconst ApplicationsPage = () => {\n  const applications = [\n    { id: 1, name: 'Application 1' },\n    { id: 2, name: 'Application 2' },\n    { id: 3, name: 'Application 3' },\n    { id: 4, name: 'Application 4' },\n    { id: 5, name: 'Application 5' },\n  ];\n\n  return (\n    <div >\n      <h2  class=\"text-center\">Data Alerts</h2>\n      \n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {applications.map(application => (\n            <tr key={application.id}>\n              <td>{application.id}</td>\n              <td>{application.name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ApplicationsPage;*/\nimport React, { useState } from 'react';\n\nconst ApplicationsPage = () => {\n  const applications = [\n    { id: 1, name: 'Application 1', notifications: [] },\n    { id: 2, name: 'Application 2', notifications: [] },\n    { id: 3, name: 'Application 3', notifications: [] },\n    { id: 4, name: 'Application 4', notifications: [] },\n    { id: 5, name: 'Application 5', notifications: [] },\n  ];\n\n  const [selectedApplicationId, setSelectedApplicationId] = useState(null);\n\n  const handleApplicationClick = (applicationId) => {\n    setSelectedApplicationId(applicationId);\n  };\n\n  const handleNotificationClick = (notificationId) => {\n    // Logic for handling notification click\n    console.log(`Notification clicked: ${notificationId}`);\n  };\n\n  const getApplicationNotifications = () => {\n    const selectedApplication = applications.find(app => app.id === selectedApplicationId);\n    return selectedApplication ? selectedApplication.notifications : [];\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-center\">Data Alerts</h2>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {applications.map((application) => (\n            <tr key={application.id} onClick={() => handleApplicationClick(application.id)}>\n              <td>{application.id}</td>\n              <td>{application.name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {selectedApplicationId && (\n        <div>\n          <h3>Notifications for {applications.find(app => app.id === selectedApplicationId).name}</h3>\n          <ul>\n            {getApplicationNotifications().map(notification => (\n              <li key={notification.id} onClick={() => handleNotificationClick(notification.id)}>\n                {notification.content}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}